// Grid setings
$grid-settings: (
  size: 1280px,
  columns: 12,
  gutter: 30px
);

// Grid breakpoints;
$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px
);

// Container max-width
$container-max-widths: (
  sm: 100%,
  md: 100%,
  lg: 95%,
  xl: 1200px
);

// Reset
html {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  font-family: sans-serif;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -ms-overflow-style: scrollbar;
  -webkit-tap-highlight-color: rgba(0,0,0,0);

  body {
    margin: 0;
    padding: 0;
  }
}

*,
*::before,
*::after {
  -webkit-box-sizing: inherit;
  box-sizing: inherit;
}

// Container and contianer fluid
[class*="container"] {
  margin-right: auto;
  margin-left: auto;
  padding-right: (map-get($grid-settings, gutter) / 2);
  padding-left:  (map-get($grid-settings, gutter) / 2);
  width: 100%;

  &[class*="fluid"] {
    max-width: none;
  }

  @media (min-width: map-get($grid-breakpoints, sm) ) {
    max-width: map-get($container-max-widths, sm);
  }

  @media (min-width: map-get($grid-breakpoints, md) ) {
    max-width: map-get($container-max-widths, md);
  }

  @media (min-width: map-get($grid-breakpoints, lg) ) {
    max-width: map-get($container-max-widths, lg);
  }

  @media (min-width: map-get($grid-breakpoints, xl) ) {
    max-width: map-get($container-max-widths, xl);
  }
}

// Rows and columns
.row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: (map-get($grid-settings, gutter) / -2);
  margin-left:  (map-get($grid-settings, gutter) / -2);

  &.justify-start {
    -webkit-box-pack: start;
    -ms-flex-pack: start;
    justify-content: flex-start;
  }

  &.justify-end {
    -webkit-box-pack: end;
    -ms-flex-pack: end;
    justify-content: flex-end;
  }

  &.justify-center {
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
  }

  &.justify-space-between {
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }

  &.justify-space-around {
    -ms-flex-pack: distribute;
    justify-content: space-around;
  }

  &.align-start {
    -webkit-box-align: start;
    -ms-flex-align: start;
    align-items: flex-start;
  }

  &.align-end {
    -webkit-box-align: end;
    -ms-flex-align: end;
    align-items: flex-end;
  }

  &.align-center {
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }

  &.align-stretch {
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }

  &.align-baseline {
    -webkit-box-align: baseline;
    -ms-flex-align: baseline;
    align-items: baseline;
  }

  + .row {
    margin-top: 3rem;
  }

  > .col,
  > [class*="col-"] {
    position: relative;
    width: 100%;
    min-height: 1px;
    padding-right: (map-get($grid-settings, gutter) / 2);
    padding-left:  (map-get($grid-settings, gutter) / 2);
    max-width: 100%;

    &.align-start {
      -ms-flex-item-align: start;
      align-self: flex-start;
    }

    &.align-center {
      -ms-flex-item-align: center;
      align-self: center;
    }

    &.align-end {
      -ms-flex-item-align: end;
      align-self: flex-end;
    }

    @for $i from 1 through map-get($grid-settings, columns) {
      &.order-#{$i} {
        -webkit-box-ordinal-group: $i;
        -ms-flex-order: $i;
        order: $i;
      }
    }
  }

  > .col {
    -ms-flex-preferred-size: 0;
    flex-basis: 0;
    -webkit-box-flex: 1;
    -ms-flex-positive: 1;
    flex-grow: 1;

    @for $i from 1 through map-get($grid-settings, columns) {
      &-xs-#{$i} {
        -webkit-box-flex: 0;
        -ms-flex: 0 0 percentage($i / map-get($grid-settings, columns));
        flex: 0 0 percentage($i / map-get($grid-settings, columns));
        max-width: percentage($i / map-get($grid-settings, columns));
      }
    }

    @media (min-width: map-get($grid-breakpoints, sm)) {
      @for $i from 1 through map-get($grid-settings, columns) {
        &-sm-#{$i} {
          -webkit-box-flex: 0;
          -ms-flex: 0 0 percentage($i / map-get($grid-settings, columns));
          flex: 0 0 percentage($i / map-get($grid-settings, columns));
          max-width: percentage($i / map-get($grid-settings, columns));
        }
      }
    }

    @media (min-width: map-get($grid-breakpoints, md)) {
      @for $i from 1 through map-get($grid-settings, columns) {
        &-md-#{$i} {
          -webkit-box-flex: 0;
          -ms-flex: 0 0 percentage($i / map-get($grid-settings, columns));
          flex: 0 0 percentage($i / map-get($grid-settings, columns));
          max-width: percentage($i / map-get($grid-settings, columns));
        }
      }
    }

    @media (min-width: map-get($grid-settings, size)) {
      @for $i from 1 through map-get($grid-settings, columns) {
        &-lg-#{$i} {
          -webkit-box-flex: 0;
          -ms-flex: 0 0 percentage($i / map-get($grid-settings, columns));
          flex: 0 0 percentage($i / map-get($grid-settings, columns));
          max-width: percentage($i / map-get($grid-settings, columns));
        }
      }
    }
  }
}
